aFruitList = ['banana', 'apple', 'orange']
aFruitList[0] = 'banana'
print(aFruitList[0])
print(aFruitList[1])
print(aFruitList[2])

# 리스트는 대괄호 [] 를 사용해서 타입을 지정한다
# 리스트는 어떻게 접근하는가? 변수명옆에 대괄호에 값을 입력하는데 배열의 첫번째는 0부터 시작한다
#리스트는 수정과 삭제가 용이하다
#del 함수를 이용하여 리스트를 삭제할 수 있다 --> del 객체
# .append(x)는 "덧붙이다, 첨부하다" 뜻으로 리스트의 맨 마지막에 x를 추가시키는 함수
a=[1,2,3]
a.append(4)
print(a)
# .sort 함수는 리스트의 요소를 순서대로 정리해준다
a=[1,4,3,2]
a.sort()
print(a)
# .reverse 함수는 리스트를 역순으로 뒤집어 준다
# 이때 순서대로 정렬한 다음 다시 역순으로 정렬하는 게 아니라 그저 현재의 리스트를 뒤집을 뿐이다
a=["a", "b", "c"]
a.reverse()
print(a)
# .index(x) 함수는 리스트 x라는 값이 있으면 x의 위치값을 리턴한다
a=[1,2,3]
a.index(2)
print(a)
# .insert(a,b)함수는 a번째 위치에 b를 삽입하는 함수이다
a=[1,2,3]
a.insert(1,4)
print(a)
# .remove(x)는 리스트에서 첫 번째로 나오는 x를 삭제하는 함수이다 != del 함수하고는 차이가 있다
a=[1,2,3,1,2,3]
a.remove(3)
print(a)
a.remove(3)
print(a)
# .pop 함수는 리스트의 맨 마지막 요소를 돌려 주고 그 요소는 삭제하는 함수
a=[1,2,3]
a.pop()
print(a)
a.pop(1)
print(a)
# .count 함수는 리스트 내에 x가 몇개 있는지 조사하여 그 개수를 알려주는 함수
a=[1,2,3,2,3]
a.count(2)
print(a)
# .extend(x) 함수는 x에서 리스트만 올 수 있으며 원래의 a의 리스트에 x 리스트를 더하게 된다
a=[1,2,3]
a.extend([4,5,6,7])
print(a)
b=[8,9,10]
a.extend(b)
print(a)
#리스트와 튜플의 차이점
#리스트는 []으로 둘러싸지만 튜플은 ()으로 둘러싼다
#리스트는 그 값의 생성, 삭제, 수정이 가능하지만 튜플은 그 값을 바꿀 수 없다
t1=()
t2=(1,)
t3=(1,2,3)
t4=1,2,3
t5=("a", "b", ("ab", "cd"))
#t2처럼 단지 1개의 요소만을 가질 때에는 요소 뒤에 콤마(,)를 반드시 붙여야 한다
#t4처럼 괄호()를 생략해도 무방하다는 점이 있다
#프로그래밍 할때에는 튜플과 리스트를 구분해서 사용하는 것이 유리하다
#왜냐하면 가장 큰 차이는 값을 변경시킬 수 있는가 없는가이기 때문이다
#즉, 그 값이 항상 변하지 않기를 바란다거나 바뀔까 걱정하고싶지 않다면 튜플을 사용
#반대로 수시로 그 값을 변화시켜야할 경우라면 리스트를 사용해야 한다
#평균적으로 튜플보다는 리스트를 더 많이 사용하게 된다